#!/bin/zsh

cd ${0:h}/..

export LANG=C

update_all() {
    # update data/all.txt

    sort data/all.txt > last.txt

    for i ({1..1758}) {
        echo "[all] process page $i ..."

        curl "https://asciinema.org/explore/public?order=date&page=$i" 2>/dev/null \
            | grep 'href="/a/' | sed 's|.*href="/a/||g; s|".*||g' \
            | sort -u > append.txt

        touch append_old.txt

        if [[ -n $(comm -12 append.txt last.txt) ]] {
            echo -n "$(cat last.txt | wc -l) -> "

            comm -23 append.txt last.txt | sort -n >> data/all.txt
            cat append_old.txt | sort -n >> data/all.txt

            cat data/all.txt | wc -l
            break
        } else {
            cat append_old.txt >> append.txt
            mv append.txt append_old.txt
        }
    }

    echo '[all][done]'

    rm append*.txt last.txt
}

update_statistics() {
    # update data/os.txt data/shell.txt data/term.txt

    local begin=0
    [[ -f data/os.txt ]] && {
        begin=${$(grep -n "^$(tail -n 1 data/os.txt | cut -f1 -d'@')$" data/all.txt)%:*}
    }

    for i ($(sed -n "$((begin + 1)),\$p" data/all.txt)) {
        echo "[statistics] process cast $i ..."
        [[ -f pages/$i ]] || curl "https://asciinema.org/a/$i" -o pages/$i 2> /dev/null

        local os=$(grep -F '<code>OS=' pages/$i | sed 's/^.*=//g; s/<.*$//g')
        local shell=$(grep -F '<code>SHELL=' pages/$i | sed 's/^.*=//g; s/<.*$//g; s/\\//g')
        local term=$(grep -F '<code>TERM=' pages/$i | sed 's/^.*=//g; s/<.*$//g')
        local user=$(grep -o 'player author="[^"]*"' pages/$i | cut -f2 -d'"')

        case $os {
            (*linux)
            os='Linux'
            ;;

            (*macos|*macOS)
            os='macOS'
            ;;

            (freebsd)
            os='FreeBSD'
            ;;

            (*windows)
            os='Windows'
            ;;

            (android)
            os='Android'
            ;;
        }

        case $shell {
            (*bash*)
            shell='bash'
            ;;

            (*zsh*)
            shell='zsh'
            ;;

            (*cmd.exe*)
            shell='cmd.exe'
            ;;
        }

        if [[ -n $os || -n $shell || -n $term ]] {
            echo $i@${os:-Unknown} >> data/os.txt
            echo $i@${shell:-unknown} >> data/shell.txt
            echo $i@${term:-unknown} >> data/term.txt
            echo $i@${user:-unknown} >> data/user.txt
        } else {
            echo error
            return 1
        }
    }

    echo '[statistics][done]'
}

update_all
update_statistics
